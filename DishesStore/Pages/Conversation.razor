@page "/chat"
@using DishesStore.Data
@using DishesStore.Db.Model
<link href="css/conversation.css" rel="stylesheet" />

<div class="stretched">
    <div class="conversation-container">
        <div class="conversation-section">
            <div class="conversation-holder">
                @{
                    string lasttime = string.Empty;
                    @foreach (var item in @Dialog.messages)
                    {
                        @if (@item.Time.ToString("HH:mm") != lasttime)
                        {
                            <div class="conversation-separate-time">
                                @item.Time.ToString("HH:mm")
                            </div>
                        }
                        lasttime = @item.Time.ToString("HH:mm");
                        <div>
                            <div>
                                <div style="border-radius: "></div>
                                <div class="conversation-message-username">@item.UserName says:</div>
                            </div>
                            <div style="float: left;">
                                <div class="conversation-message-body">@item.Body</div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div style="display: flex; width: 100%; justify-content: space-between">
                <div style="width: 93%;">
                    @*<textarea class="conversation-input-message" rows="@Rows"
                        @bind-value="MessageBody"
                        @onkeydown="@SubmitMessage"
                        @bind-value:event="oninput"
                        maxlength="160" />
                        <textarea class="conversation-input-message" rows="@Rows"
                        spellcheck="false"
                        @oninput="OnInputHandle"
                        @onkeydown="@SubmitMessage"
                        maxlength="160">@MessageBody</textarea>*@
                    <textarea class="conversation-input-message" rows="@Rows"
                              @bind-value:event="oninput"
                              @bind-value="MessageBody"
                              @onkeydown="@SubmitMessage"
                              maxlength="160" />
                    @*<textarea class="conversation-input-message" rows="@Rows"
                        @bind-value="MessageBody"
                        @onkeypress="SubmitMessage"
                        maxlength="160" />*@
                    @*<textarea type="text" class="conversation-input-message" placeholder="Express your feelings with other people." />*@
                </div>
                <div>
                    <button class="conversation-submit-button" @onclick="ClickSubmit">➜</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    int Rows = 2;
    string LastMessageBody = string.Empty;

    string _MessageBody { get; set; } = string.Empty;
    string MessageBody
    {
        get => _MessageBody;
        set
        {
            _MessageBody = value;
            CalcRows();
            StateHasChanged();
        }
    }

    private void CalcRows()
    {
        Rows = Math.Max(MessageBody.Split('\n').Length, 2);
    }

    private void ClickSubmit()
    {
        if (MessageBody.Trim() != string.Empty && !MessageBody.Contains("⠀"))
        {
            Dialog.AddMessage(new Message(MessageBody.ToString()));
            MessageBody = "";
        }
    }

    private void SubmitMessage(KeyboardEventArgs e)
    {
        if (e.Code == "Enter")
        {
            CalcRows();
            if (MessageBody.Trim() != string.Empty)
            {
                LastMessageBody = MessageBody;
                StateHasChanged();
            }
        }
    }
        }