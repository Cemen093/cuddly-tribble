@page "/profile"
@using DishesStore.Db.Context
@using DishesStore.Db.Model.Auth

@inject Blazored.LocalStorage.ILocalStorageService oLocalStore;

<div class="auth-stretched">
    <div class="auth-container" style="padding: 0;">
        <div class="auth-section" style="width: auto; min-width: 440px">
            <div class="auth-holder">
                <div class="hello-holder">
                    <span class="hello-title">Hello, @UserLogin! 😋</span>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    string UserLogin = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string UserSession = await oLocalStore.GetItemAsync<string>("UserSession");
            string UserName = await oLocalStore.GetItemAsync<string>("UserName");

            if (UserSession != null)
            {
                var User = DbService.Users.Where(x => x.SessionHash == UserSession).First();
                if (UserName == null)
                {
                    SaveToLocalStorage(User.Login);
                }
                UserLogin = User.Login;
                StateHasChanged();
            }
            else
            {
                ClearSession();
            }
        }
    }

    public async void ClearSession()
    {
        await oLocalStore.ClearAsync();
    }

    public void SaveToLocalStorage(string UserNameToSave)
    {
        oLocalStore.SetItemAsync("UserName", UserNameToSave);
    }
}
