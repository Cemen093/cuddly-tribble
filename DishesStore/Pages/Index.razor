@page "/"
@using DishesStore.Data
@using DishesStore.Db.Model

<PageTitle>Store</PageTitle>

<div class="site-holder">
    <div class="main-container">
        <div>
            <h1 class="main-title">Dishes</h1>
        </div>

        <div class="filters-container">
            <div class="search-field">
                <span class="search-label">Find by name</span>
                <input class="input-field" maxlength="30" placeholder="Filters" @bind-value="searchQuery" @bind-value:event="oninput" />
            </div>
            <div class="categories-field">
                <div class="categories">
                    <div class="">
                        <ul class="store-categories">
                            @{
                                int id = 1;
                                @foreach (var item in @categories)
                                {
                                    <li class="store-categories-element">
                                        <input class="store-categories-element-input" type='radio' value='@id' name='radio' id='radio@(id)' />
                                        <label class="category" for='radio@(id)'>@item.Name</label>
                                    </li>

                                    id++;
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="stretched">
    <div class="assortment-container">
        @if (@dishes.Count == 0 || (@searchQuery != string.Empty && @dishes.Where(x => x.Name.ToLower().Contains(searchQuery)).ToList().Count == 0))
        {
            <div class="assortment-container-stretched">Sorry! Nothing has been found by your query!</div>
        }
        else
        {
            @foreach (var item in searchQuery == string.Empty ? @dishes : @dishes.Where(x => x.Name.ToLower().Contains(searchQuery)))
            {
                <element @onclick="myScript" class="card">
                    <div>
                        <img class="card-img" src="https://mercatopizzakurier.ch/wp-content/uploads/2019/10/1459955-free-png-pepperoni-pizza-png-images-transparent-free-png-images-pizza-850_834.png">
                    </div>
                    <div>
                        <div class="card-title">@item.Name</div>
                        <div class="card-calorie">Calorieness</div>
                        <div class="values-container">
                            <div class="checkbox-value checkbox-active">250 kcal</div>
                            <div class="checkbox-value">400 kcal</div>
                            <div class="checkbox-value">600 kcal</div>
                        </div>
                        <div class="purchase-segment">
                            <div class="card-price">$@item.Price</div>
                            @*<button id="@item.Id" @onclick="myScript1" @onclick:stopPropagation="true" @onclick:preventDefault="true"><svg class="purchase-button" id="PurchaseIcon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 3l-.743 2h-1.929l-3.474 12h-13.239l-4.615-11h16.812l-.564 2h-13.24l2.937 7h10.428l3.432-12h4.195zm-15.5 15c-.828 0-1.5.672-1.5 1.5 0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm6.9-7-1.9 7c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5z" /></svg></button>*@
                            <button @onclick="@((args)=>myScript1(@item))" @onclick:stopPropagation="true" @onclick:preventDefault="true"><svg class="purchase-button" id="PurchaseIcon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 3l-.743 2h-1.929l-3.474 12h-13.239l-4.615-11h16.812l-.564 2h-13.24l2.937 7h10.428l3.432-12h4.195zm-15.5 15c-.828 0-1.5.672-1.5 1.5 0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm6.9-7-1.9 7c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5z" /></svg></button>
                        </div>
                    </div>
                </element>
            }
        }
    </div>
</div>

<Confirmation @ref="confirmation" OnPurchase="OnPurchase">
    <div>
        <div class="item-display-container">
            <div class="img-display-holder">
                <img class="img-popup" src="https://mercatopizzakurier.ch/wp-content/uploads/2019/10/1459955-free-png-pepperoni-pizza-png-images-transparent-free-png-images-pizza-850_834.png" />
            </div>

            <div class="additional-display-holder">
                <div class="additional-section">
                    <div class="display-item-values-container">
                        <div class="display-item-checkbox-value display-item-checkbox-active">250 kcal</div>
                        <div class="display-item-checkbox-value">400 kcal</div>
                        <div class="display-item-checkbox-value">600 kcal</div>
                    </div>
                    <div>
                        <button class="cross-btn" @onclick="OnPurchase">&#9932;</button>
                    </div>
                </div>
                <div class="display-item-card-title">Dish 1</div>
                <div class="display-item-card-description">Dish description dish description dish description dish description dish description dish description</div>

                <div>
                    <div>
                        proteins carbohydrates fats.
                    </div>

                    <div>
                        <div class="display-item-lower-container">
                            <div>
                                <div class="amount-label">
                                    Amount
                                </div>
                                <div style="display:flex">
                                    <div class="input-modal">
                                        <span>@dishCount</span>
                                    </div>
                                    <div class="btns-container">
                                        <div>
                                            <button class="modal-button-count btn-green" @onclick="CountIncrease">+</button>
                                        </div>
                                        <div>
                                            <button class="modal-button-count btn-red" @onclick="CountDecrease">-</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="modal-section">
                                    <div class="modal-item-price-label">
                                        Price
                                    </div>
                                    <div class="modal-item-price">
                                        @dishPrice usd.
                                    </div>
                                    <div class="modal-item-totalprice">
                                        Total: <span style="font-family: 'Circe-B'">@totalPrice usd.</span>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-section modal-section-last">
                                <div>
                                    <button @onclick="OnPurchase" type="button" class="btn btn-purchase">Purchase</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Confirmation>

@code {
    string name = "2";
    int dishCount = 1;
    double dishPrice = 4;
    double totalPrice = 4;
    string searchQuery = "";

    List<Dish> dishes = new List<Dish>();
    List<Category> categories = new List<Category>();
    //List<Dish> dishes = new List<Dish>() { new Dish() { Id = 0, Name = "Dish 0", Description = "Desc 0", Price = 1, IsAvailable = true } };

    private void myScript1(Dish dish)
    {
        Cart.AddItem(dish);
    }

    private void myScript()
    {
        confirmation.Show();
    }

    private void CountChanged()
    {

    }

    private void CountIncrease()
    {
        dishCount += (dishCount == 10 ? 0 : 1);
        totalPrice = dishCount * dishPrice;
    }

    private void CountDecrease()
    {
        dishCount -= (dishCount == 1 ? 0 : 1);
        totalPrice = dishCount * dishPrice;
    }

    private void CheckboxChanged(object? truth, string filter)
    {
        name = "5";
    }

    Confirmation confirmation;

    private void OnPurchase()
    {
        confirmation.Hide();
        Cart.AddPrice(totalPrice);
        dishCount = 1;
    }

    protected override void OnInitialized()
    {
        for (int i = 0; i < 20; i++)
        {
            dishes.Add(new Dish()
                {
                    Id = i,
                    Name = $"Dish {i}",
                    Description = $"Description {i}",
                    Price = i,
                    IsAvailable = true
                });
        }
        categories = new List<Category>() {
            new Category() { Name = "All" },
            new Category() { Name = "Vegan" },
            new Category() { Name = "Vegetables" },
            new Category() { Name = "Meat" },
            new Category() { Name = "Low Carb" },
            new Category() { Name = "Snack" },
            new Category() { Name = "For Kids" }
        };
        base.OnInitialized();
    }
}